function st = assemblage(M)%Initialisation  A = zeros(M.nbn,M.nbn);  %A = sparse(diag(ones(N,1))+diag(ones(N-1,1),-1)+diag(ones(N-1,1),1));  F = zeros(M.nbn,1);  Four = 2;%Addition des termes volumiques  for (l=1:M.nbe)  %---Calcul de x et y---    x = zeros(3,1);    y = zeros(3,1);    for (i=1:3)      x(i) = M.coord(M.tri(l,i),1);;      y(i) = M.coord(M.tri(l,i),2);;    end  %-------------------------------------    Kl = coeffelem_P1_rigid(x,y);    Fl = coeffelem_P1_source(x,y);    for (i=1:3)      I = M.tri(l,i);      F(I) = F(I) + Fl(i);      for (j=1:3)        J = M.tri(l,j);        A(I,J) = A(I,J) + Kl(i,j);      end    end  end%Addition des termes de bord (Fourier/Robin)  for (a=1:M.nba)  %---Calcul de x et y---    x = zeros(2,1);    y = zeros(2,1);    for (i=1:2)      x(i) = M.coord(M.ar(a,i),1);      y(i) = M.coord(M.ar(a,i),2);    end  %-------------------------------------    Alpha = fonc_a(x,y);    if (M.refa(a) == Four)      Ea = coeffelem_P1_transf(x,y,Alpha);      Pa = coeffelem_P1_poids(x,y,Alpha);      for (i=1:2)        I = M.ar(a,i);        F(I) = F(I) + Ea(i);        for (j=1:2)          J = M.ar(a,j);          A(I,J) = A(I,J) + Pa(i,j);        end      end    end  end  st = struct('A',A,'F',F);end